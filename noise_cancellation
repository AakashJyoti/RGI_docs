from pedalboard.io import AudioFile
from pedalboard import *
import noisereduce as nr
import soundfile as sf
sr=44100
#loading audio
with AudioFile('your_audio.wav').resampled_to(sr) as f:
    audio = f.read(f.frames)
#noisereduction
reduced_noise = nr.reduce_noise(y=audio, sr=sr, stationary=True, prop_decrease=0.75)
#enhancing through pedalboard
board = Pedalboard([
    NoiseGate(threshold_db=-30, ratio=1.5, release_ms=250),
    Compressor(threshold_db=-16, ratio=4),
    LowShelfFilter(cutoff_frequency_hz=400, gain_db=10, q=1),
    Gain(gain_db=2)
])

effected = board(reduced_noise, sr)
#saving enhanced audio
with AudioFile('/content/audio1_enhenced.wav', 'w', sr, effected.shape[0]) as f:
  f.write(effected)






import re
from rapidfuzz import process, fuzz

def normalize(s: str) -> str:
    s = s.lower()
    s = re.sub(r"[^\w\s]", "", s)      # drop punctuation
    s = re.sub(r"\s+", " ", s).strip() # collapse whitespace
    return s

def find_similar_garage(
    user_input: str,
    garage_list: list[str],
    threshold: int = 50
) -> str | None:
    # Precompute normalized names
    norm_list = [normalize(name) for name in garage_list]
    norm_input = normalize(user_input)
    
    # RapidFuzz’s extractOne returns (match, score, index)
    match, score, idx = process.extractOne(
        norm_input,
        norm_list,
        scorer=fuzz.WRatio
    )
    
    if score >= threshold:
        return garage_list[idx]  # return original‑cased name
    return None

# Example
garages = [
    "Joe's Auto Repair",
    "Precision Garage Services",
    "Downtown Car Care",
    "Elite Auto Garage"
]

print(find_similar_garage("Joe Auto Repar", garages, threshold=50))
# → "Joe's Auto Repair"
