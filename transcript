def update_transcript(session_id: str, speaker: str, message: str) -> None:
    """
    Appends a timestamped line to the `transcript` field of UserDetails.
    Creates the record if it doesn't already exist.
    """
    # 1. Format the new line
    ts   = timezone.now().strftime('%Y-%m-%d %H:%M:%S')
    line = f"{ts} - {speaker}: {message}\n"

    # 2. Fetch or create the UserDetails row
    obj, created = UserDetails.objects.get_or_create(
        session_id=session_id,
        defaults={'transcript': line}
    )  # get_or_create handles atomic creation if missing :contentReference[oaicite:1]{index=1}

    if not created:
        # 3. Append and save just the transcript & timestamp
        obj.transcript   = (obj.transcript or '') + line
        obj.save(update_fields=['transcript', 'last_updated'])



# code to check about yes or no logic
import re

YES_TOKENS = {"yes","yeah","yep","sure"}
NO_TOKENS  = {"no","nope","nah"}

def parse_yes_no(text):
    tokens = re.findall(r"\b\w+\b", text.lower())
    print(tokens)
    for t in tokens:
        if t in YES_TOKENS:
            return True
        if t in NO_TOKENS:
            return False
    return None  # unable to classify





message = "माफ़ कीजिए, मुझे आपके मोबाइल नंबर से जुड़ी कोई भी पॉलिसी नहीं मिल पाई। मैं अभी आपको एक एजेंट से जोड़ देती हूँ।"
message = "ठीक है, मैं आपकी पॉलिसी सूचना की प्रक्रिया शुरू कर रही हूँ।"
message = "आपके नंबर से कई पॉलिसियाँ जुड़ी हुई हैं। कृपया आगे बढ़ने के लिए एक पॉलिसी चुन लें।"
message = f"अगर आपकी पॉलिसी {last_seven_digits} पर समाप्त होती है, तो कृपया 'हाँ' कहिए ताकि हम आगे बढ़ सकें।"
message = "आपके नंबर से कई पॉलिसियाँ जुड़ी हैं। कृपया उस पॉलिसी के आखिरी सात अंक बताइए, जिसके साथ आप आगे बढ़ना चाहते हैं।"
message = "माफ़ कीजिए, मैं पॉलिसी नंबर की पुष्टि नहीं कर पाई। अभी मैं आपको एक एजेंट से जोड़ रही हूँ।"
message = "माफ़ कीजिए, मैं किसी भी पॉलिसी नंबर की पुष्टि नहीं कर पाई। चलिए, मैं आपको एक एजेंट से जोड़ देती हूँ।"
message = "माफ़ कीजिए, सिस्टम में थोड़ी दिक्कत आ रही है। मैं आपको एक एजेंट से जोड़ रही हूँ जो आपकी मदद करेंगे। कृपया थोड़ी देर प्रतीक्षा करें।"
message = "आगे बढ़ने के लिए मुझे आपका पॉलिसी नंबर या मोबाइल नंबर चाहिए होगा। मैं आपको एक एजेंट से जोड़ देती हूँ।"
message = "मुझे पॉलिसी की जानकारी नहीं मिल पाई। मैं अभी आपको एक एजेंट से जोड़ देती हूँ।"
message = "बस एक पल रुकिए, मैं आपकी पॉलिसी की जानकारी देख रही हूँ।"
message = (
    f"कृपया पुष्टि कीजिए: पॉलिसी नंबर {session.policy_details['policyno']}, "
    f"बीमित व्यक्ति का नाम {session.policy_details['insured_name']} है। क्या ये सही है?"
)



def get_policy_details(session: ClaimSession):
    try:
        """
        This function obtains policy details based on the inputs stored in the session, with enhanced confirmation and retry logic.
    
        - If a policy number is already provided, it fetches details and confirms with the user.
        - If a mobile number is available, it retrieves linked policies, confirms one, and then confirms the details.
        - Users have two chances to correct their policy number if initial confirmations fail.
        """

        # CASE 1: Direct policy number provided in session
        if getattr(session, 'policy_number', None):
            policy_number = session.policy_number
            session.policy_details = fetch_policy_details_via_phone_number(policy_number)

            if session.policy_details:
                # Confirm policy details with user
                confirm_msg = (
                    f"कृपया इस जानकारी की पुष्टि करें: पॉलिसी नंबर {session.policy_details['policyno']} "
                    f"और बीमित व्यक्ति का नाम {session.policy_details['insured_name']}। क्या यह सही है? कृपया 'हाँ' या 'नहीं' कहें।")

                text_to_speech_func(confirm_msg)

                # user_response = (speech_to_text().strip().lower())
                # with st.spinner("Recording..."):
                #     handle_recording(duration=5)  # Assuming handle_recording is your recording function
                # user_input = speech_to_text_azure_streamlit_hindi().strip().lower()
                user_input = handle_user_input(duration=5)
                if user_input is False:
                    session.transfer_reason = "Exceed the input limit"
                    message = "माफ़ कीजिए, मुझे आपकी तरफ से कोई जानकारी नहीं मिली है, इसलिए अब मैं कॉल डिस्कनेक्ट कर रही हूँ।"
                    text_to_speech_func(message)
                    return False

                prompt = """Please reply it in either 'yes' or 'no'"""
                user_response = call_openai(write_prompt_for_hindi_to_english(input_text=user_input, instructions=prompt))
                print(user_response)
                with st.chat_message("user"):
                    st.write(user_input)


                if "yes" in user_response or "confirm" in user_response or 'correct' in user_response:

                    message = "मैं आपकी जानकारी देख रही हूँ, कृपया एक पल इंतजार करें।"
                    text_to_speech_func(message)

                    return True
                else:
                    # Handle retries for direct policy number case
                    return handle_policy_retries(session)
            else:
                session.transfer_reason = "Policy details not found for the provided policy number"

                message = "पॉलिसी विवरण नहीं मिल पाया। मैं आपको एजेंट से जोड़ता हूँ।"
                text_to_speech_func(message)

                return False

        # CASE 2: Mobile number available
        elif getattr(session, 'mobile_number', None):
            mobile_number = session.mobile_number
            policy_numbers = extract_motor_policy_numbers(mobile_number)

            if not policy_numbers:
                session.transfer_reason = "No policy numbers found linked to the provided mobile number"

                message = "हम आपके मोबाइल नंबर से जुड़ी कोई पॉलिसी नहीं ढूंढ पाए। मैं आपको एजेंट से जोड़ता हूँ।"
                text_to_speech_func(message)

                return False

            confirmed_policy = None

            if len(policy_numbers) > 1:
                message = "इस नंबर से कई पॉलिसी जुड़ी हुई हैं। मुझे उन्हें एक-एक करके पुष्टि करने दें।"
                text_to_speech_func(message)

            for policy in policy_numbers:

                message = F"क्या आपकी पॉलिसी नंबर {policy} है? अगर यह सही है, तो कृपया हाँ या नहीं कहें।"
                text_to_speech_func(message)


                # user_reply = remove_fullstop_from_input(speech_to_text().strip().lower())
                # with st.spinner("Recording..."):
                #     handle_recording(duration=5)  # Assuming handle_recording is your recording function
                # user_input = speech_to_text_azure_streamlit_hindi().strip().lower()
                user_input = handle_user_input(duration=5)
                if user_input is False:
                    session.transfer_reason = "Exceed the input limit"
                    message = "माफ़ कीजिए, मुझे आपकी तरफ से कोई जानकारी नहीं मिली है, इसलिए अब मैं कॉल डिस्कनेक्ट कर रही हूँ।"
                    text_to_speech_func(message)
                    return False

                prompt = """Please reply it in either 'yes' or 'no', please analyze the input and then respond"""
                user_response = call_openai(write_prompt_for_hindi_to_english(input_text=user_input, instructions=prompt))
                print(user_response)
                with st.chat_message("user"):
                    st.write(user_input)




                if "yes" in user_response.lower() or "confirm" in user_response.lower():
                    confirmed_policy = policy
                    session.policy_number = policy
                    break

            if not confirmed_policy:
                session.transfer_reason = "No policy number confirmed by the user"

                message = "मैं कोई पॉलिसी नंबर पुष्टि नहीं कर सका। मैं आपको एजेंट से जोड़ता हूँ।"
                text_to_speech_func(message)

                return False

            # Fetch and confirm details
            session.policy_details = fetch_policy_details_via_phone_number(confirmed_policy)
            if session.policy_details:
                confirm_msg = (
                    f"कृपया इस जानकारी की पुष्टि करें: पॉलिसी नंबर {session.policy_details['policyno']} "
                    f"और बीमित व्यक्ति का नाम {session.policy_details['insured_name']} है। क्या यह सही है?")

                text_to_speech_func(confirm_msg)


                # user_response = remove_fullstop_from_input(speech_to_text().strip().lower())
                # with st.spinner("Recording..."):
                #     handle_recording(duration=5)  # Assuming handle_recording is your recording function
                # user_input = speech_to_text_azure_streamlit_hindi().strip().lower()
                user_input = handle_user_input(duration=5)
                if user_input is False:
                    session.transfer_reason = "Exceed the input limit"
                    message = "माफ़ कीजिए, मुझे आपकी तरफ से कोई जानकारी नहीं मिली है, इसलिए अब मैं कॉल डिस्कनेक्ट कर रही हूँ।"
                    text_to_speech_func(message)
                    return False

                prompt = """Please reply it in either 'yes' or 'no'"""
                user_response = call_openai(write_prompt_for_hindi_to_english(input_text=user_input, instructions=prompt))
                print(user_response)
                with st.chat_message("user"):
                    st.write(user_input)


                if "yes" in user_response.lower() or "confirm" in user_response.lower() :

                    message = "मैं आपकी जानकारी देख रही हूँ, कृपया एक पल इंतजार करें।"
                    text_to_speech_func(message)

                    return True
                else:
                    # Handle retries for mobile-derived policy number
                    return handle_policy_retries(session)
            else:
                session.transfer_reason = "Policy details not found for the confirmed policy number"

                message = "पॉलिसी विवरण नहीं मिल पाया। मैं आपको एजेंट से जोड़ता हूँ।"
                text_to_speech_func(message)

                return False

        # CASE 3: No relevant information
        else:
            session.transfer_reason = "koi polisi ya mobile number pradaan nahi kiyaa gya hai"

            message = "हमारे पास आगे बढ़ने के लिए पॉलिसी नंबर या मोबाइल नंबर होना चाहिए। मैं आपको एजेंट से जोड़ रही हूँ।"
            text_to_speech_func(message)

            return False
    except Exception as e:
        session.transfer_reason = f"Get policy details error: {str(e)}"
        message = "मुझे खेद है, सिस्टम समस्या के कारण मैं आपको एक एजेंट से जोड़ रही हूँ, जो आगे आपकी सहायता कर सकता है। कृपया इंतजार करें।"
        text_to_speech_func(message)
        return False

